import org.ajoberstar.gradle.git.release.semver.*
import org.ajoberstar.gradle.git.release.opinion.Strategies

plugins {
    id 'java'
    id 'de.gliderpilot.semantic-release' version '1.2.0'
    id 'maven'
}

group 'com.praqma'

apply plugin: 'java'

repositories {
    mavenCentral()
    jcenter()
}

release {
    // add a second strategy to create release candidates from 'rc/.*' branches
    versionStrategy semanticRelease.releaseStrategy.copyWith(
            // the type is important, without type you would again replace the default strategy
            type: 'rc',
            selector: { SemVerStrategyState state ->
                !state.repoDirty && state.currentBranch.name ==~ /integration.*/ &&
                        semanticRelease.semanticStrategy.canRelease(state) && project.gradle.startParameter.taskNames.find { it == 'release' }
            },
            preReleaseStrategy: StrategyUtil.all({ it.copyWith(inferredPreRelease: 'rc') } as PartialSemVerStrategy, Strategies.PreRelease.COUNT_INCREMENTED)
    )

}
semanticRelease {
    repo {
    }
}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}
